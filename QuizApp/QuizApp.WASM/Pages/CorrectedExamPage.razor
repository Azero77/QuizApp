@page "/CorrectedExam"
@inject NavigationManager NavigationManager
@inherits HttpClientErrorHandler
@inject ExamsClient Client

@if(_exam is not null && _submission is not null)
{
    <h1>Your Result is @_submission.Result</h1>
    <CascadingValue Value="_submission">
        <ExamVieww Exam="_exam"
                   ExamMode="ExamMode.Corrected" />
    </CascadingValue>
    <a href="/" class="btn btn-success">Solve More</a>
}
else
{
    <MudProgressCircular/>
}

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string ExamId { get; set; } = string.Empty;

    [Parameter]
    [SupplyParameterFromQuery]
    public string SubmissionId { get; set; } = string.Empty;

    private Exam? _exam = null!;
    private Submission? _submission = null!;
    protected override async Task OnInitializedAsync()
    {
        _exam = await Client.GetExamAsync(ExamId);
        _submission = await Client.GetSubmission(SubmissionId);

        if(_exam is null || _submission is null)
        {
            AddError("Data is not valid");
        }
    }

}
