@page "/submissionResult"
@inherits HttpClientErrorHandler
@inject ExamsClient Client
@inject NavigationManager NavigationManager

<div class="data-latex exam-container d-flex flex-column justify-content-center align-items-center">
    @if (_exam is not null && _submission is not null)
    {
        <h1>Your Result is @_submission.Result</h1>
        <CascadingValue Value="ExamState">
            <ExamView
                />
        </CascadingValue>
        <a href="/" class="btn btn-success">Solve More</a>
    }
    else
    {
        <MudProgressCircular />
    }
</div>

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "examId")]
    public string ExamId { get; set; } = string.Empty;

    [Parameter]
    [SupplyParameterFromQuery(Name = "submissionId")]
    public string SubmissionId { get; set; } = string.Empty;

    [Inject]
    public ExamService ExamState { get; set; } = null;

    private Exam? _exam = null!;
    private Submission? _submission = null!;
    protected override async Task OnInitializedAsync()
    {
        _exam = await Client.GetExamAsync(ExamId);
        _submission = await Client.GetSubmission(SubmissionId);
        if(_exam is null || _submission is null)
        {
            AddError("Page Not found");
            return;
        }
        ExamState.Initialize(_exam, ExamMode.Corrected,_submission);
    }

}