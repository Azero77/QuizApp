@page "/submissionResult"
@inject NavigationManager NavigationManager
<HttpClientErrorHandler>
    <div>
        @if (submission is not null)
        {
            <ScoreView result="@submission.Result"
                       fullMark="@submission.Choices.Count()" />
            <div class="bg-info w-50 m-auto mt-3 m-2 rounded"></div>
            <ExamView Id="@examId"
                      submissionName="@submission.SubmissionPersonName"
                      Choices="@submission.Choices.ToArray()"
                      Corrected="true" />
        }
        else
        {
            <MudProgressCircular Color="Color.Info"
                                 Indeterminate="true"
                                 Size="Size.Large"
                                 Style="height:30vh;width:30vh;align-self:center;margin-top:15%" />
        }
    </div>
</HttpClientErrorHandler>
@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string submissionId { get; set; } = null!;

    [Parameter]
    [SupplyParameterFromQuery]
    public string examId { get; set; } = null!;

    private Submission? submission = null;

    private int result = 0;
    [Inject]
    public ExamsClient _client { get; set; } = null!;

    protected override async Task OnParametersSetAsync()
    {
        submission = await InitializeSubmission();
    }

    private Task<Submission?> InitializeSubmission()
    {
        if (submissionId is not null)
            return _client.GetSubmission(submissionId);
        else
            //return Task with null
            return Task.FromResult<Submission?>(null);
    }
}
